name: CI and Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # ──────────────────────────────────────────────────────────────────────────
  # 1. Job do testów backendu (Python/Flask)
  # ──────────────────────────────────────────────────────────────────────────
  backend-tests:
    name: 🐍 Backend Tests (Flask/Python)
    runs-on: ubuntu-latest

    steps:
      - name: 1️⃣ Checkout repository
        uses: actions/checkout@v3

      - name: 2️⃣ Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'   # lub inna wersja, której używacie lokalnie

      - name: 3️⃣ Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        working-directory: ./server

      - name: 4️⃣ Create database tables (jeśli potrzebne)
        # Zakładam, że macie skrypt create_tables.py, żeby przy bootstrapie utworzyć tabele.
        run: python create_tables.py
        working-directory: ./server

      - name: 5️⃣ Run backend tests
        # Zakładam, że w katalogu server/tests macie pliki test_*.py (pytest)
        run: pytest --maxfail=1 --disable-warnings -q
        working-directory: ./server

  # ──────────────────────────────────────────────────────────────────────────
  # 2. Job do budowania i lintowania frontendu (Next.js / React)
  # ──────────────────────────────────────────────────────────────────────────
  frontend-build:
    name: 🛠 Frontend · Lint · Build · Export
    needs: backend-tests
    runs-on: ubuntu-latest

    steps:
      - name: 1️⃣ Checkout repository
        uses: actions/checkout@v3

      - name: 2️⃣ Set up Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: 3️⃣ Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('client/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: 4️⃣ Install frontend dependencies
        run: npm ci
        working-directory: ./client

      - name: 5️⃣ Lint code (bez interakcji)
        run: npx next lint --no-interactive
        working-directory: ./client

      - name: 6️⃣ Build application
        run: npm run build
        working-directory: ./client

      - name: 7️⃣ Next.js Export (statyczne pliki)
        run: npm run export
        working-directory: ./client

      - name: 8️⃣ Upload exported site as artifact
        uses: actions/upload-artifact@v4
        with:
          name: exported-site
          path: client/out

  # ──────────────────────────────────────────────────────────────────────────
  # 3. Job do właściwego deploy’u (tylko gdy push na main)
  # ──────────────────────────────────────────────────────────────────────────
  deploy:
    name: 🚀 Deploy to GitHub Pages
    needs: frontend-build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - name: 1️⃣ Checkout repository
        uses: actions/checkout@v3

      - name: 2️⃣ Download exported artifact
        uses: actions/download-artifact@v4
        with:
          name: exported-site
          path: client/out

      - name: 3️⃣ Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./client/out
